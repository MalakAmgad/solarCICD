name: solar system workflow

on:
  workflow_dispatch:
  push:
    branches: 
      - feature-brancheA
      - main
env: 
   MONGO_URI: "mongodb+srv://supercluster.d83jj.mongodb.net/superData"
   MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
   MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD }}


jobs:
  unit-testing:
    name: Unit Testing    
    strategy:
      matrix:
        nodejs_version: [18, 19, 20]   
        os: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
          - nodejs_version: 18
            os: macos-latest
    runs-on: ${{ matrix.os }}

    steps: 
      - name: Checkout Repo
        uses: actions/checkout@v5
      
      - name: Setup NodeJs version - ${{ matrix.nodejs_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.nodejs_version }}

      - name: Install dep
        run: npm install

      - name: Unit testing
        run: npm test
        id: unit-testing-step  
      
      - name: Archive test result
        if: steps.unit-testing-step.outcome == 'failure' || steps.unit-testing-step.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: SP-Test-Results-${{matrix.nodejs_version}}-${{matrix.os}}
          path: test-results.xml

  code-coverage:
    name: Code Coverage
    needs: unit-testing
    runs-on: ubuntu-latest
    steps:
        - name: Checkout Repo
          uses: actions/checkout@v2

        - name: Setup Node.js version - 18
          uses: actions/setup-node@v4
          with:
            node-version: 18
        - name: Install dependencies
          run: npm install
        
        - name: Check code coverage
          continue-on-error: true
          run: npm run coverage
        
        - name: Archive coverage results
          uses: actions/upload-artifact@v4
          with:
            name: code-coverage-results
            path: coverage
            retention-days: 5
  
  docker:
      name: Containerization
      needs: [code-coverage, unit-testing]
      permissions:
        packages: write
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
    
        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_TOKEN }}
        - name: AXR Login
          uses: docker/login-action@v2
          with:
            registry: pfor.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITLAB_TOKEN }}